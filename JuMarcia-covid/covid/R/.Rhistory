View(temp)
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
ICode = temp$Indicator.Code,
Indicador = indicator,
Ano = recent.yrs)
df[[i]]
View(df[[i]])
?write.table
write.table(x = df[[i]], file = paste0(temp$Indicator.Code[1], '.txt'))
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
i = 1
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i], '.csv'))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
write.table(x = df[[i]], file = paste0(temp$Indicator.Code[1], '.txt'))
}
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
i = 1
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
write.table(x = df[[i]], file = paste0(temp$Indicator.Code[1], '.txt'))
}
i
j
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
i = 1
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
View(temp)
i=4
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
yrs
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
info.na
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
info.na
which(info.na == 'FALSE')
which(info.na == 'FALSE') == NULL
which(info.na == 'FALSE') == integer(0)
length(info.na)
sum(info.na == TRUE) == length(info.na)
if(sum(info.na == TRUE) == length(info.na)){ # se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
recent.yrs
indicator
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
i = 1
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
write.table(x = df[[i]], file = paste0(temp$Indicator.Code[1], '.txt'))
}
j
i
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
i = 13
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
var.names$ARQUIVO[i]
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
write.table(x = df[[i]], file = paste0(temp$Indicator.Code[1], '.txt'))
}
df
View(df)
paste0(i, temp$Indicator.Code[1], '.txt')
paste0(i, '_', temp$Indicator.Code[1], '.txt')
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
write.table(x = df[[i]], file = paste0(i, '_', temp$Indicator.Code[1], '.txt'))
}
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
file.name <- vector()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
file.name[i] <- paste0(i, '_', temp$Indicator.Code[1], '.txt')
write.table(x = df[[i]], file = file.name)
}
i
j
file.name
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
file.name <- vector()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
file.name[i] <- paste0(i, '_', temp$Indicator.Code[1], '.txt')
write.table(x = df[[i]], file = file.name)
}
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
file.name[i] <- paste0(i, '_', temp$Indicator.Code[1], '.txt')
write.table(x = df[[i]], file = file.name)
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
file.name <- vector()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
file.name[i] <- paste0(i, '_', temp$Indicator.Code[1], '.txt')
write.table(x = df[[i]], file = file.name[i])
}
file.name
file.name
aux.df <- read.table(file.name[1])
View(aux.df)
dataset <- cbin(aux.df$Country, aux.df$CCode)
dataset <- cbind(aux.df$Country, aux.df$CCode)
dataset
dataset <- data.frame(aux.df$Country, aux.df$CCode)
View(dataset)
dataset <- data.frame(Country = aux.df$Country, CCode = aux.df$CCode)
View(dataset)
dataset <- data.frame(Country = aux.df$Country, CCode = aux.df$CCode, aux.df$Indicador)
aux.df$INome
aux.df$Indicador
file.name
file.name[1]
stri_sub(file.name[1], length(file.name[1]), file.name[1]-1, file.name[1]-2)
library(stringr)
stri_sub(file.name[1], length(file.name[1]), file.name[1]-1, file.name[1]-2)
install.packages('stringi ')
install.packages('stringi')
install.packages("stringi")
library(stringi)
stri_sub(file.name[1], length(file.name[1]), file.name[1]-1, file.name[1]-2)
substr(x = file.name[1], start = length(file.name[1]), stop = length(file.name[1]) - 3)
substr(x = file.name[1], start = length(file.name[1])-3, stop = length(file.name[1]))
file.name[1]
length(file.name[1])-3
length(file.name[1])
file.name[1]
nchar(file.name[1])
substr(x = file.name[1], start = nchar(file.name[1])-3, stop = nchar(file.name[1]))
-substr(x = file.name[1], start = nchar(file.name[1])-3, stop = nchar(file.name[1]))
substr(x = file.name[1], start = 1, stop = nchar(file.name[1])-3)
substr(x = file.name[1], start = 1, stop = nchar(file.name[1])-4)
substr(x = file.name[1], start = 3, stop = nchar(file.name[1])-4)
colnames(dataset) <- (colnames(dataset)[1:2], aux)
colnames(dataset)
colnames(dataset)[1:2]
colnames(dataset) <- c(colnames(dataset)[1:2], aux)
# colocar uma condição no start
aux = substr(x = file.name[1], start = 3, stop = nchar(file.name[1])-4)
colnames(dataset) <- c(colnames(dataset)[1:2], aux)
file.name
length(file.name)
k=2
aux.df <- read.table(file.name[k]) # banco auxiliar
View(aux.df)
aux = substr(x = file.name[i], start = ifelse(k < 10, 3, 4), stop = nchar(file.name[i])-4)
aux
file.name[i]
file.name[k]
aux = substr(x = file.name[k], start = ifelse(k < 10, 3, 4), stop = nchar(file.name[k])-4)
aux
dataset <- cbind(dataset, aux.df$Indicador)
colnames(dataset) <- c(colnames(dataset)[1:(k+1)], aux)
# confirmando que os nomes dos countrys estão iguais
dataset$Country == aux.df$Country
# confirmando que os nomes dos countrys estão iguais
sum(dataset$Country == aux.df$Country)
country.equal <- vector()
country.equal[1] <- 264
for(k in 2:length(file.name)){
aux.df <- read.table(file.name[k])
aux = substr(x = file.name[k], start = ifelse(k < 10, 3, 4), stop = nchar(file.name[k])-4)
dataset <- cbind(dataset, aux.df$Indicador)
colnames(dataset) <- c(colnames(dataset)[1:(k+1)], aux)
# confirmando que os nomes dos countrys estão iguais
country.equal[k] = sum(dataset$Country == aux.df$Country)
}
k
country.equal
View(dataset)
write.table(dataset, file = 'indicadores.txt')
k=40
file.name[k]
aux.df <- read.table(file.name[k])
View(aux.df)
aux = substr(x = file.name[k], start = ifelse(k < 10, 3, 4), stop = nchar(file.name[k])-4)
aux
aux.df$Indicador
dataset <- cbind(dataset, aux.df$Indicador)
View(dataset)
library(readxl)
var.names <- read_excel('variaveis/variaveis.xlsx')
df <- list()
file.name <- vector()
for(i in 1:nrow(var.names)){
all_content <- readLines(paste0('variaveis/', var.names$ARQUIVO[i]))
skip_second <- all_content[-c(1:4)]
temp <- read.csv2(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE, sep = ',')
# as colunas que me importam: de 1960 até 2019:
yrs <- colnames(temp)[-c(1:4, ncol(temp))]
#---------------------------------------- pegar o valor do índice mais recente:
recent.yrs <- indicator <- vector()
for (j in 1:nrow(temp)){
# é NA ou tem alguma informação?
info.na <- is.na(temp[j, yrs])
if(sum(info.na == TRUE) == length(info.na)){
# se só tiver NA no país
recent.yrs[j] <- indicator[j] <- NA
} else {
# qual o ano mais recente com indicador?
recent.yrs[j] <- colnames(info.na)[max(which(info.na == 'FALSE'))]
# pegando o valor do indicador:
indicator[j] <- as.numeric(temp[j,recent.yrs[j]])
}
}
# agora salvando o indicador arrumado, com o ano em questão do indicador
df[[i]] <- data.frame(Country = temp$Country.Name,
CCode = temp$Country.Code,
INome = temp$Indicator.Name,
Indicador = indicator,
Ano = recent.yrs)
file.name[i] <- paste0(i, '_', temp$Indicator.Code[1], '.txt')
write.table(x = df[[i]], file = file.name[i])
}
# para o primeiro:
aux.df <- read.table(file.name[1])
dataset <- data.frame(Country = aux.df$Country, CCode = aux.df$CCode, aux.df$Indicador)
View(dataset)
# colocar uma condição no start
aux = substr(x = file.name[1], start = 3, stop = nchar(file.name[1])-4)
colnames(dataset) <- c(colnames(dataset)[1:2], aux)
country.equal <- vector()
country.equal[1] <- 264
for(k in 2:length(file.name)){
aux.df <- read.table(file.name[k])
aux = substr(x = file.name[k], start = ifelse(k < 10, 3, 4), stop = nchar(file.name[k])-4)
dataset <- cbind(dataset, aux.df$Indicador)
colnames(dataset) <- c(colnames(dataset)[1:(k+1)], aux)
# confirmando que os nomes dos países estão na mesma ordem
country.equal[k] = sum(dataset$Country == aux.df$Country)
}
write.table(dataset, file = 'indicadores.txt')
install.packages('naniar')
View(dataset)
vis_miss(dataset[-c(1:2)])
library(naniar)
vis_miss(dataset[-c(1:2)])
?vis_miss
gg_miss_upset(dataset[-c(1:2)])
vis_miss(dataset[-c(1:2)])
gg_miss_upset(dataset[-c(1:2)])
gg_miss_upset(dataset[-c(1:2)], nsets = 10)
gg_miss_upset(dataset[-c(1:2)], nsets = 6)
n_var_miss(dataset)
gg_miss_upset(dataset[-c(1:2)], nsets = 6, nintersects = 50)
gg_miss_upset(dataset[-c(1:2)], nsets = 6, nintersects = 50)
gg_miss_var(dataset[-c(1:2)])
gg_miss_var(dataset[-c(1:2)], show_pct = TRUE)
